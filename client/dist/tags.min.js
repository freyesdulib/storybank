"use strict";!function(){angular.module("tags",[]).run(function($http,$templateCache){$http.get("tags/views/create-tags.client.view.html",{cache:$templateCache})}).run(function($http,$templateCache){$http.get("tags/views/edit-tags.client.view.html",{cache:$templateCache})}).run(function($http,$templateCache){$http.get("tags/views/list-tags.client.view.html",{cache:$templateCache})})}(),function(){var TagsController=function($scope,$location,$routeParams,$filter,$timeout,Authentication,User,Tags,Flash){var vm=this;vm.authentication=Authentication;var successMessage=function(successMessage){$("form").hide();var message='<strong><span class="glyphicon glyphicon-ok">&nbsp;'+successMessage+"</span></strong>";Flash.create("success",message,"custom-class"),parent.scrollTo(0,0),$timeout(function(){$location.path("tags")},5e3)};vm.predicate="name",vm.reverse=!1,vm.order=function(predicate){vm.reverse=vm.predicate===predicate?!vm.reverse:!1,vm.predicate=predicate},vm.create=function(){if(!$scope.tagsForm.$valid)return $scope.tagsForm.submitted=!0,!1;var tag=new Tags({name:vm.name,description:vm.description});tag.$save(function(){var message="Record added!";successMessage(message)},function(errorResponse){vm.error=errorResponse.data.message})},vm.find=function(){vm.tags=Tags.query()},vm.findOne=function(){vm.tag=Tags.get({tagId:$routeParams.tagId})},vm.update=function(){vm.tag.$update(function(){var message="Record updated!";successMessage(message)},function(errorResponse){vm.error=errorResponse.data.message})},vm["delete"]=function(tag){var confirm=window.confirm("Are you sure you want to delete this tag?");confirm&&(tag?tag.$remove(function(){for(var i in vm.tag)vm.tag[i]===tag&&vm.tag.splice(i,1)}):vm.tag.$remove(function(){var message="Record removed!";successMessage(message)}))}};TagsController.$inject=["$scope","$location","$routeParams","$filter","$timeout","Authentication","User","Tags","Flash"],angular.module("tags").controller("TagsController",TagsController)}(),function(){var resource=function($resource){return $resource("api/tags/:tagId",{tagId:"@_id"},{update:{method:"PUT"}})};angular.module("tags").factory("Tags",["$resource",resource])}(),function(){var tagsRoutes=function($routeProvider){var checkAuth={auth:function(){null===window.user&&(window.location="#!/signin")}};$routeProvider.when("/tags",{templateUrl:"tags/views/list-tags.client.view.html",resolve:checkAuth}).when("/tags/create",{templateUrl:"tags/views/create-tags.client.view.html",resolve:checkAuth}).when("/tags/:tagId",{templateUrl:"tags/views/view-tags.client.view.html",resolve:checkAuth}).when("/tags/:tagId/edit",{templateUrl:"tags/views/edit-tags.client.view.html",resolve:checkAuth}).otherwise({redirectTo:"/signin"})};angular.module("tags").config(["$routeProvider",tagsRoutes])}();